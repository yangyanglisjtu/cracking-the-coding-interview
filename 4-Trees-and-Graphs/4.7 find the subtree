bool containTree(TreeNode t1,TreeNode t2){
    if(t2==NULL) return true;
    else return subTree(t1,t2);
}
bool subTree(TreeNode r1,TreeNode r2){
   if(r1==NULL)
      return false;
  if(r1.data==r2.data)
    if(ismatch(r1,r2)) return true;
  return (subTree(r1.left,r2)||subTree(r1.right,r2));
}
bool matchTree(TreeNode r1,TreeNode r2){
    if(r2===NULL&&r1==NULL){
       return true;
    }
    if(r2==NULL)
      return false;
    if(r1.data!=r2.data)
      return false;
    return (matchTree(r1.left,r2.left)&&matchTree(r1.right,r2.right))
}
